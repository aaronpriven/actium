#!/usr/bin/perl

@ARGV = qw(-s sp10) if $ENV{RUNNING_UNDER_AFFRUS};

# avl2stoplists - see POD documentation below

#00000000111111111122222222223333333333444444444455555555556666666666777777777
#23456789012345678901234567890123456789012345678901234567890123456789012345678

use warnings;
use strict;

use sort ('stable');

# add the current program directory to list of files to include
use FindBin('$Bin');
use lib ($Bin , "$Bin/../bin");

use Carp;
use Storable();

use Actium( qw[say sayt jn jt initialize avldata ensuredir option]);
use Actium::Constants;

# don't buffer terminal output
$| = 1;

my $helptext = <<'EOF';
slists2bagorder makes the order for bags (that is, listing stops by route in order
of traversing that route) from the line.storable file.
EOF

my $intro = 'slists2bagorder -- makes order for bags';

Actium::initialize ($helptext, $intro);

# retrieve data

my %stops_of = %{ Storable::retrieve('oldline.storable') } or die $!;

open my $in , '<' , 'comparestops-x.txt' or die $!;

my %stop_used;

while (<$in>) {
   my ($type, $stop);
   ($type, $stop, undef) = split (/\t/ , $_ , 3);
   $stop_used{$stop} = $type;
}

close $in or die $!;

while (my ($linedir , $stops_r) = each %stops_of) {

   my @newstops;

   foreach my $stop (@{$stops_r}) {
      push @newstops, $stop if $stop_used{$stop};
   }
   $stops_of{$linedir} = \@newstops;
   
}

open my $baglist, '>' , 'baglist.txt' or die $!;

my %seen_stop;

foreach my $linedir ( sort { scalar @{$stops_of{$b}} <=> scalar @{$stops_of{$a}} } keys %stops_of ) {
   next if $linedir =~ /^NC/;
   next if $linedir =~ /^LC/;
   next if $linedir =~ /^399/;

   print $baglist $linedir;
   foreach my $stop ( @{$stops_of{$linedir}} ) {
      next if $seen_stop{$stop};
      print $baglist "\t$stop";
      $seen_stop{$stop} = 1;
   }
   print $baglist "\n";

}

close $baglist or die $!;




























